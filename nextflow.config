params {
    // Pipeline metadata
    version = false
    
    // Input options
    help = false
    input = false
    metadata = false
    
    // Processing options
    skip_primer_trim = false
    skip_nb = false
    run_picrust2 = false
    download_db = false
    skip_phylotree = false
    
    // QC parameters
    filterQ = 20
    downsample = 0
    
    // DADA2 parameters
    min_len = 1000
    max_len = 1600
    omegac = "1e-40"
    max_ee = 2
    minQ = 0
    learn_error_sample = false
    pooling_method = 'pseudo'
    
    // ASV filtering parameters
    min_asv_totalfreq = 5  // Will be set to 0 for single sample
    min_asv_sample = 1     // Will be set to 0 for single sample
    
    // VSEARCH parameters
    maxreject = 100
    maxaccept = 100
    vsearch_identity = 0.97
    
    // Primer sequences (V1-V9 adapter by default)
    front_p = 'AGRGTTYGATYMTGGCTCAG'
    adapter_p = 'AAGTCGTAACAAGGTARCY'
    
    // Resource allocation
    dada2_cpu = 8
    vsearch_cpu = 8
    cutadapt_cpu = 16
    
    // Database paths
    vsearch_db = "${projectDir}/databases/GTDB_ssu_all_r220.qza"
    vsearch_tax = "${projectDir}/databases/GTDB_ssu_all_r220.taxonomy.qza"
    silva_db = "${projectDir}/databases/silva_nr99_v138.2_toSpecies_trainset.fa.gz"
    gg2_db = "${projectDir}/databases/gg2_2024_09_toSpecies_trainset.fa.gz"
    gtdb_db = "${projectDir}/databases/GTDB_bac120_arc53_ssu_r220_fullTaxo.fa.gz"
    
    // Database to prioritize, can be GG2, GTDB, or Silva
    db_to_prioritize = "GG2"
    
    // Script locations
    rmd_vis_biom_script = "${projectDir}/scripts/visualize_biom.Rmd"
    rmd_helper = "${projectDir}/scripts/import_biom.R"
    primer_fasta = "${projectDir}/scripts/16S_primers.fasta"
    dadaCCS_script = "${projectDir}/scripts/run_dada_2023.2.R"
    dadaAssign_script = "${projectDir}/scripts/dada2_assign_tax.R"
    learnError_script = "${projectDir}/scripts/learnError.R"
    
    // Output options
    outdir = "results"
    publish_dir_mode = "symlink"
    colorby = "condition"
    rarefaction_depth = null
    
    // Container options
    enable_conda = false
    enable_container = false
}

// Docker/Singularity configuration
docker {
    enabled = params.enable_container
}

singularity {
    enabled = params.enable_container
    autoMounts = true
}

// Execution reports
report {
    enabled = true
    overwrite = true
    file = "${params.outdir}/execution_report.html"
}

timeline {
    enabled = true
    file = "${params.outdir}/execution_timeline.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.outdir}/execution_trace.txt"
    overwrite = true
}

// Execution profiles
profiles {
    standard {
        conda {
            useMamba = false
            conda.enabled = true
            // Allow longer conda creation timeout
            createTimeout = '2 h'
            cacheDir = "${projectDir}/nf_conda/"
        }
        params.enable_conda = true
        singularity.enabled = false
        singularity.automounts = false
        docker.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
    
    conda {
        conda {
            useMamba = false
            conda.enabled = true
            // Allow longer conda creation timeout
            createTimeout = '2 h'
            cacheDir = "${projectDir}/nf_conda/"
        }
        params.enable_conda = true
        singularity.enabled = false
        singularity.automounts = false
        docker.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "${projectDir}/nf_conda/singularity"
        singularity.runOptions = "--bind ${projectDir}/nf_conda:/home/qiime2"
        params.enable_container = true
        docker.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
    
    docker {
        singularity.enabled = false
        singularity.autoMounts = false
        docker.enabled = true
        params.enable_container = true
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
}

// Also add back the CPU and memory configurations
process {
    withLabel: cpu_def {
        cpus = 4
        memory = 16.GB
    }

    withLabel: cpu8 {
        cpus = 8
        memory = 32.GB
    }

    withLabel: cpu32 {
        cpus = 32
        memory = 128.GB
    }
}

// Local executor configuration
executor {
    // Change to slurm and uncomment queue if using Slurm scheduler
    name = 'slurm'
    max_retries = 3
    // queue = 'QUEUE'
}

// Default if using local
process {
    // Default cpu if not specified
    cpus = 8
    // Set tmpdir before every process
    beforeScript = 'mkdir -p ./tmp/'
}

// env for qiime
env {
  TMPDIR = './tmp/'
  MPLCONFIGDIR = './tmp/mplconfigdir'
  NUMBA_CACHE_DIR = './tmp/numbacache'
  MAFFT_TMPDIR = './tmp/mafft_tmpdir'
}
